{
  "name": "ttycast",
  "version": "0.0.3",
  "description": "broadcast your tty to the world!",
  "main": "app.js",
  "dependencies": {
    "connect": "2.4.x",
    "socket.io": "~0.9.6",
    "tty.js": "0.2.7",
    "send": "*"
  },
  "bin": {
    "ttycast": "./app.js"
  },
  "devDependencies": {},
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "license": "MIT",
  "readme": "ttycast: broadcast your tty!\n============================\n\nThis app allows you to broadcast your tty online, in really real time!\n\nThis Node.js app is very simple (less than 80 lines of my own code),\nby putting a lot of libraries together. So, this app wouldn't be possible without:\n\n* [tty.js](https://github.com/chjj/tty.js) - terminal emulator in pure javascript\n* [socket.io](http://socket.io/) - for real time communication\n* [ttyrec](http://0xcc.net/ttyrec/index.html.en) - a tty recorder\n* and also thanks to [Connect](http://www.senchalabs.org/connect/).\n\nThis NodeJS app is powered by tty.js, ttyrec (and ttyplay), socket.io and connect.\n\nAn online version of this app is available at <http://tty.hacked.jp>.\nIt uses `ttyrec` and `nc`, no Node.js required on the client.\nThe modified source code will be released sometime after.\n\n<img src=\"http://i.imgur.com/7aRYM.png\" alt=\"ttycast\">\n\n\n\nPrerequisites\n-------------\n\nInstall ttyrec:\n\n    brew install ttyrec\n\nInstall ttycast:\n\n    npm install -g ttycast\n\nAlso, your terminal must be 80x25. But you can change that size in `index.html`.\n\nRunning\n-------\n\nIn your terminal emulator, create a named pipe and pipe it using `ttyplay -n` to ttycast.\n\n    mkfifo /tmp/ttycast\n    ttyplay -n /tmp/ttycast | ttycast\n\nOpen your browser and navigate to the server.\n\n    http://localhost:13377/\n\nThen, spawn a new 80x25 terminal window and start recording:\n\n    reset && ttyrec /tmp/ttycast\n\nThen you should see characters appearing in real-time. After using, don't forget to `rm /tmp/ttycast`!\n\n(not working? Then try using normal files. Scroll all the way down.)\n\n\n\nChanging Port\n-------------\n\nttycast uses the PORT environment variable but the default port is 13377\n\n\n\nPiping Via SSH\n--------------\n\nYou can install ttycast on your server somewhere, and pipe your\nlocal terminal there through SSH!\n\nGood when you are behind a firewall.\n\n    ttyplay -n /tmp/ttycast | ssh myserver.dt.in.th PORT=12345 ttycast\n\n\n\nPipe Anything\n-------------\n\nUm you can pipe anything that a terminal can understand to ttycast, and it will be broadcasted.\n\n    brew install sl\n    { while true; do sl 2>&1; done } | ttycast\n\n<img src=\"http://i.imgur.com/7pQoN.png\" alt=\"sl!!\">\n\n\n\n\n\n\nLicense\n-------\n\nThe MIT license\n\n\n----\n\nNormal File Usage\n-----------------\n\nIn your favorite terminal emulator, spawn a new window, and then to start recording:\n\n    reset && ttyrec /tmp/ttyr\n\nNow on your old window, run `ttyplay -p` and pipe it to ttycast!\n\n    ttyplay -p /tmp/ttyr | ttycast\n\nAnd go to\n\n    http://localhost:13377/\n\n",
  "_id": "ttycast@0.0.3",
  "dist": {
    "shasum": "618519c8f4c3241f8ef9d2d11b1a06d3daf01e7b"
  },
  "_from": "ttycast"
}
